

docker run -d --name projeto-test-bp-container -p 8888:30001 tjca1/projeto-spring-boot-bp:1.0.0

tjca1@hotmail.com:123456
dGpjYTFAaG90bWFpbC5jb206MTIzNDU2Cg==

//////////////////////////////////////////////////////////////////////////////////
//////////////HELM////////////////////////////////////////////////////////////////
/////instalação///
curl https://raw.githubusercontent.com/helm/helm/master/scripts/get > get_helm.sh
chmod 700 get_helm.sh
./get_helm.sh
ou
curl https://raw.githubusercontent.com/helm/helm/master/scripts/get | bash
//////////
helm init
/////////
root@linux:~/cursoDevOps/helm/confsTiller# kubectl apply -f 01_tiller-sa.yaml
root@linux:~/cursoDevOps/helm/confsTiller# kubectl apply -f 02_allresources-clusterrole.yaml
root@linux:~/cursoDevOps/helm/confsTiller# kubectl apply -f 03_cluster_role_binding.yaml
///////////////ISSO ///////////////////////////////////////////////
  /////kubectl describe sa tiller -n kube-system
  /////kubectl edit svc tiller-deploy -n kube-system
  /////kubectl edit deployment tiller-deploy -n kube-system
  /////kubectl get deploy tiller-deploy -n kube-system -o yaml | grep tiller
  /////kubectl get deploy tiller-deploy -n kube-system -o yaml | grep account
  /////kubectl patch deployment tiller-deploy -n kube-system --patch "$(cat 04_patch.yaml)"
///OU////
helm init --service-account tiller
////////////////////////////////////////////
helm repo update
helm search tets
helm install stable/tomcat
helm ls
/////NAME                	REVISION	UPDATED                 	STATUS  	CHART       	APP VERSION	NAMESPACE
/////solitary-labradoodle	1       	Wed Mar 20 09:45:23 2019	DEPLOYED	tomcat-0.2.0	7          	default 
helm delete solitary-labradoodle
////////////////////////
root@linux:~/cursoDevOps/helm/chartRedeSocial/frontend# helm install .
helm ls
helm delete --purge vigilant-panther
helm install . --name frontend --namespace thiago

//////////////////restart KUBERNETES//////////////////////////////////////////////
systemctl restart kubelet

systemctl restart ssh 
//////////////////////////////////////////////////////////////////////////////////
kubectl get cm --all-namespaces
cursoDevOps# kubectl get cm --all-namespaces
docker build -t tjca1/frontend-redesocial:1.0.1-staging --build-arg NPM_ENV=staging .
docker build -t tjca1/frontend-redesocial:1.0.3 .
kubectl get all -n staging
kubectl apply -f backend-user-deploy.yaml --namespace staging

****** entrar no pod********
kubectl exec -it nome_pod sh -n staging
whoami
root
kubectl exec -it backend-scm-76578699d9-gbddb sh -n staging
backend-scm-76578699d9-gbddb
======kubernetes======================================================================================
//////////docker///////////////////////////////////////////////////////////////////////
sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo apt-key fingerprint 0EBFCD88
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
sudo apt-get update
sudo apt-get install -y docker-ce=18.06.1~ce~3-0~ubuntu
sudo usermod -aG docker $USER
//sudo poweroff
//sudo reboot
desativar swap ubuntu
swapoff -a 
///////////instalação kubernetes//////////////////////////////////////////////
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
////ou////
cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
apt-get update
apt-get install -y kubelet=1.11.3-00 kubeadm=1.11.3-00 kubectl=1.11.3-00
apt-mark hold kubelet kubeadm kubectl
/////config cluster///////////////////////////////////////////////////////////////////////////
sudo kubeadm init --pod-network-cidr=10.244.0.0/16
/////acrescentar novas maquinas ///////////////////
kubeadm join 192.168.1.5:6443 --token accxh1.qiloqewdkcsze1cn --discovery-token-ca-cert-hash sha256:66005d3e34a165fd8d1b1b3b8fa75b91df0283cd636251f5d4a0fd1b4fc3ca5a
//////////////////////////////////////////////////////
kubeadm join 192.168.1.5:6443 --token lq1oo9.qyqewoxaob39ufqo --discovery-token-ca-cert-hash sha256:d8a2c97d4b1db168724692c9974ecde7afe9b35b69441c86105aeda3b8ae7165
/////////////////////////////configurando o kubectl///////////////////////////////////////////
kubectl cluster-info
||||||Kubernetes master is running at https://127.0.0.1:8443
||||||To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
||||||The connection to the server 127.0.0.1:8443 was refused - did you specify the right host or port?
////////////////
mkdir -p $HOME/.kube
cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
chown $(id -u):$(id -g) $HOME/.kube/config
kubectl cluster-info
||||||Kubernetes master is running at https://192.168.1.5:6443
||||||KubeDNS is running at https://192.168.1.5:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy
||||||To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
/////////////////////////////////////////////////////////////////////////////////////////////////
kubectl get nodes
kubectl get all --all-namespaces
kubectl get nodes
/////////////////////////////////////////////////////////////////////////////////////////////////
kubectl cluster-info
|||||kube-system   pod/coredns-78fcdf6894-6d46q        0/1       Pending   0          20m
|||||kube-system   pod/coredns-78fcdf6894-rfn6x        0/1       Pending   0          20m
|||||kube-system   pod/etcd-linux                      1/1       Running   0          20m
|||||kube-system   pod/kube-apiserver-linux            1/1       Running   0          20m
|||||kube-system   pod/kube-controller-manager-linux   1/1       Running   0          20m
|||||kube-system   pod/kube-proxy-bsjbz                1/1       Running   0          20m
|||||kube-system   pod/kube-scheduler-linux            1/1       Running   0          20m
///////////////adicionar network///flannel//////////////////////////////////////////////////////////////
kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.10.0/Documentation/kube-flannel.yml
/////ou////
kubectl apply -f /root/cursoDevOps/kube-flannel.yml
kubectl cluster-info
kubectl get all -n kube-system
|||||kube-system   pod/coredns-78fcdf6894-6d46q        1/1       Running   0          32m
|||||kube-system   pod/coredns-78fcdf6894-rfn6x        1/1       Running   0          32m
|||||kube-system   pod/etcd-linux                      1/1       Running   0          31m
|||||kube-system   pod/kube-apiserver-linux            1/1       Running   0          31m
|||||kube-system   pod/kube-controller-manager-linux   1/1       Running   0          31m
|||||kube-system   pod/kube-flannel-ds-c8t56           1/1       Running   0          1m
|||||kube-system   pod/kube-proxy-bsjbz                1/1       Running   0          32m
|||||kube-system   pod/kube-scheduler-linux            1/1       Running   0          31m
/////////////////////////////////////////////////////////////////////////////////////////////////////////
kubectl get nodes
kubectl taint nodes --all node-role.kubernetes.io/master-      // opcional colocando a node master para armazenar os nodes///
////teste////
kubectl run kubernetes-bootcamp --image=gcr.io/google-samples/kubernetes-bootcamp:v1 --port=8080
kubectl get deployment
|||||NAME                  DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE
|||||kubernetes-bootcamp   1         1         1            1           1m
kubectl proxy
/////////////////////
kubectl get pods
||||||NAME                                  READY     STATUS    RESTARTS   AGE
||||||kubernetes-bootcamp-69bf88c8c-7trjt   1/1       Running   0          10m
kubectl logs kubernetes-bootcamp-69bf88c8c-7trjt
||||||Kubernetes Bootcamp App Started At: 2019-03-13T13:24:16.596Z | Running On:  kubernetes-bootcamp-69bf88c8c-7trjt
curl http://linux:8001/api/v1/namespaces/default/pods/kubernetes-bootcamp-69bf88c8c-7trjt/proxy/
     http://localhost:8001/api/v1/namespaces/default/pods/kubernetes-dashboard-5dd89b9875-f4gkr/proxy/
///////visualizar o arquivo yaml do pod criado/////////////////////////////////////////////////////////
kubectl get deploy kubernetes-bootcamp-69bf88c8c-7trjt -n kkkkk -o yaml
///////editar o arquivo yaml do pod criado mod vi, vim///////////////////////////////////////////////
kubectl edit deploy kubernetes-bootcamp
////////tipos de services kubernetes/////////////////////////////////////////////////////////////////////////////////////////////
***node port = prover acesso aos pods por ip e porta na nuvem ou no host raiz caso o kubernetes n esteja rodando no cloud provider
***load balance = prover acesso aos pods por ip na nuvem ou no host raiz caso o kubernetes n esteja rodando no cloud provider
***prover acesso aos pods por ip na rede do docker, internamente!
///////////////////////configurando dashBoard/////////////////////////////////////////////////////////
kubectl apply -f /root/cursoDevOps/kubernetes-dashboard_v1_10_1/kubernetes-dashboard.yaml
////
voltar tudo 
cd /
/////////
Vamos agora expor nosso Dashboard:
kubectl expose deployment kubernetes-dashboard --name=kubernetes-dashboard-nodeport --port=443 --target-port=8443 --type=NodePort -n kube-system
kubectl expose deployment kubernetes-dashboard --name=kubernetes-dashboard-novo --port=443 --target-port=8443 --type=NodePort -n kube-system
kubectl get all --all-namespaces
////deixar en stad by/minitorar////////////////////////////////////////////////
watch kubectl get all --all-namespaces
///////expondo o deployment em modo service nodeport///////////////////////////
kubectl expose deployment kubernetes-dashboard --name=kubernetes-dashboard-nodeport --port=443 --target-port=8443 --type=NodePort -n kube-system

kubectl expose deployment kubernetes-dashboard --name=kubernetes-dashboard-nodeport --port=443 --target-port=8443 --type=NodePort -n lab1 lab2 lab3

/////ver as infos do deploy/////
kubectl get all --all-namespaces | grep dash
kubectl describe pod/kubernetes-dashboard-5dd89b9875-jbw7w -n kube-system
//////achando o token do dashBoard/////////////////////////////////////////////
kubectl describe sa kubernetes-dashboard -n kube-system
ou
kubectl describe pod/kubernetes-dashboard-5dd89b9875-jbw7w -n kube-system |grep token
||||||Mountable secrets:   kubernetes-dashboard-token-khq6b
||||||Tokens:              kubernetes-dashboard-token-khq6b
*achando o token/////////////

||||||token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSnJkV0psTFhONWMzUmxiU0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVmpjbVYwTG01aGJXVWlPaUpyZFdKbGNtNWxkR1Z6TFdSaGMyaGliMkZ5WkMxMGIydGxiaTFyYUhFMllpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMbTVoYldVaU9pSnJkV0psY201bGRHVnpMV1JoYzJoaWIyRnlaQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJakF3TTJSbE5qQXhMVFExWTJZdE1URmxPUzA1TkRsaUxUQXdNakZqWTJSaE1qUTRPQ0lzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwcmRXSmxMWE41YzNSbGJUcHJkV0psY201bGRHVnpMV1JoYzJoaWIyRnlaQ0o5LkF1MHdHQlVqWHc0TEpKRi1RZ2lYX2ZDc3NCb0ZRbk8xWmFQeEpOSC1XaFZWa2pUV0I3eFRhbHJfSDlYUjdNRUo2Q3BqVVFIMVVXZzhUOXhSazJxN3RXd1RQd1VpUFE2bVVhV0cxQ3M1THNDSUktRFdQSVlTRHh0NkVTSG5oREdFTC02OGtSZlYtREZEclZBV042M05jSXRkUjBUWlRBZi1yWnJYNnQzVEtYSVRITnoyeXZLNnctbnZGb0lCeTR4c1ZmbVI1TVVKTVdJaERIeTRwc3hyaEJETXhOQ2lGX0YwNElHNktRQTBjcVFtVWdVcDdsNUp2RkVKVVFZSkc5S0kyallnZmFYd0VYTktDQllnbnlXd2ttTUo0UXNYdFdMbGVZckhZMkN0ZXNPRklDcVBkbnFWdEdJR2VpZlRoRlBSQTFhakEwYlVTbGJ4a1RSTFZWQk5vUQ==
echo ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSnJkV0psTFhONWMzUmxiU0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVmpjbVYwTG01aGJXVWlPaUpyZFdKbGNtNWxkR1Z6TFdSaGMyaGliMkZ5WkMxMGIydGxiaTFyYUhFMllpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMbTVoYldVaU9pSnJkV0psY201bGRHVnpMV1JoYzJoaWIyRnlaQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJakF3TTJSbE5qQXhMVFExWTJZdE1URmxPUzA1TkRsaUxUQXdNakZqWTJSaE1qUTRPQ0lzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwcmRXSmxMWE41YzNSbGJUcHJkV0psY201bGRHVnpMV1JoYzJoaWIyRnlaQ0o5LkF1MHdHQlVqWHc0TEpKRi1RZ2lYX2ZDc3NCb0ZRbk8xWmFQeEpOSC1XaFZWa2pUV0I3eFRhbHJfSDlYUjdNRUo2Q3BqVVFIMVVXZzhUOXhSazJxN3RXd1RQd1VpUFE2bVVhV0cxQ3M1THNDSUktRFdQSVlTRHh0NkVTSG5oREdFTC02OGtSZlYtREZEclZBV042M05jSXRkUjBUWlRBZi1yWnJYNnQzVEtYSVRITnoyeXZLNnctbnZGb0lCeTR4c1ZmbVI1TVVKTVdJaERIeTRwc3hyaEJETXhOQ2lGX0YwNElHNktRQTBjcVFtVWdVcDdsNUp2RkVKVVFZSkc5S0kyallnZmFYd0VYTktDQllnbnlXd2ttTUo0UXNYdFdMbGVZckhZMkN0ZXNPRklDcVBkbnFWdEdJR2VpZlRoRlBSQTFhakEwYlVTbGJ4a1RSTFZWQk5vUQ== | base64 --decode
****o resultado na linha de baixo é o token final, cole no campo token no browser e autentique-se, ex:gerado****
eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJrdWJlcm5ldGVzLWRhc2hib2FyZC10b2tlbi1raHE2YiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjAwM2RlNjAxLTQ1Y2YtMTFlOS05NDliLTAwMjFjY2RhMjQ4OCIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTprdWJlcm5ldGVzLWRhc2hib2FyZCJ9.Au0wGBUjXw4LJJF-QgiX_fCssBoFQnO1ZaPxJNH-WhVVkjTWB7xTalr_H9XR7MEJ6CpjUQH1UWg8T9xRk2q7tWwTPwUiPQ6mUaWG1Cs5LsCII-DWPIYSDxt6ESHnhDGEL-68kRfV-DFDrVAWN63NcItdR0TZTAf-rZrX6t3TKXITHNz2yvK6w-nvFoIBy4xsVfmR5MUJMWIhDHy4psxrhBDMxNCiF_F04IG6KQA0cqQmUgUp7l5JvFEJUQYJG9KI2jYgfaXwEXNKCBYgnyWwkmMJ4QsXtWLleYrHY2CtesOFICqPdnqVtGIGeifThFPRA1ajA0bUSlbxkTRLVVBNoQ

echo ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSnJkV0psTFhONWMzUmxiU0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVmpjbVYwTG01aGJXVWlPaUpyZFdKbGNtNWxkR1Z6TFdSaGMyaGliMkZ5WkMxMGIydGxiaTFuYTNaM2FpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMbTVoYldVaU9pSnJkV0psY201bGRHVnpMV1JoYzJoaWIyRnlaQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJalZoTldJM05UUTFMVFE1WWpVdE1URmxPUzFoTTJSakxUQXdNakZqWTJSaE1qUTRPQ0lzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwcmRXSmxMWE41YzNSbGJUcHJkV0psY201bGRHVnpMV1JoYzJoaWIyRnlaQ0o5Lk45Y0c4bzVHNVBReDJyYmxlRmxpUi0zTjhBR1A5ZjZLTHJuU0RuY1lWbUV3VXFBeEhDUkp2eldWM2VuNzI0VWxsY0pPY1NfbG9zd0dMSE55YlhDN1Z0eUptVzhTRnVuZjBJY0JNaC1jNFE4STRJZ2pjLTFvbW9xTEh5bjFDNm1vdEg4N21KYUhkM0N3c2JyRi1ZaUhHRzNQdjRnOU90Q01iZ09OX1VRLUxzbmlCVXJaX0Rhb1FINzNKcDVndEw1dGVNdF9HOXI4Q2xQQTR6WEc5OXdOMHU3ek9Vbmg3MldkMko0Yk9iY2pkOHR4MVRKZmxmSWJxU3VRaWJHbktjOXNBaC1OdG5fZGxYOGRYRWdGOW9pbWZBck0ySFFZSGQ4R3FfbWN3X3JlRi13QjZ1OU1vT1lQR0g0T2F5eWR1d09CUmlUQk1vX1J2bDlzX1JVczJBby1IQQ== | base64 --decode

/////////////CRIANDO USUARIOS KUBERNETES///////////////////////////////////////////////////////////////////////////////////////
kubectl create serviceaccount kkk -n kube-system
kubectl create clusterrolebinding kubeadmin-admin_ --clusterrole=admin --serviceaccount=kube-system:kkk
kubectl describe sa kkk -n kube-system
kubectl get secret kkk-token-wkw9q -n kube-system -o yaml


kubectl create serviceaccount kubeadm -n kube-system
kubectl create clusterrolebinding kubeadmin-binding4 --clusterrole=cluster-admin2 --serviceaccount=kube-system:kubeadm3



||||||serviceaccount/kubeadmin created
kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep eks-admin | awk '{print $1}')
kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep kubeadm2 | awk '{print $1}')

 eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMua
W8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJrdWJlYWRtMi10b2tlbi1nNGM4biIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJrdWJlYWRtMiIsImt1YmVybmV0ZXMuaW8vc2Vydml
jZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjBiNTNjMGI3LTRhMGEtMTFlOS1iMmViLTAwMjFjY2RhMjQ4OCIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTprdWJlYWRtMiJ9.I60hjMbxDHodJQObGYvW
vE_P_hV__lH794tZ-0bsfMxPPET9XELiXO9-d885miptJvIyPDgbdRMlUhOwMn6ur1pcj_EaYNrslNNd2o2txVLtuNaY2uOXwQ84wLqN7Vxzy25nca6UMHDbp8vOxWH4KBS--0AB7t9AtXvF6_XW8qUZN_fNb-PN-cCcCIjqIFSp5XGUdYeBZo
ZI6M4OcYCBfNGl7FxKfvEFx24uEpya5YKwZ4jyj1Imz0BndeDhTLRUAUiqyNUv3I0TYT6iDwNatYSK6azttqRI6_5dUPTfvPuFkgFEQVyUcu24BjXk6FES6yv9v2IsvRV87kL2Q7hrnA

kubectl describe sa kubeadm2 -n kube-system
kubeadm2-token-g4c8n

kubectl get secret kubeadm2-token-g4c8n -n kube-system -o yaml |grep token:
echo  ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSnJkV0psTFhONWMzUmxiU0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVmpjbVYwTG01aGJXVWlPaUpyZFdKbFlXUnRNaTEwYjJ0bGJpMW5OR000YmlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKcmRXSmxZV1J0TWlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SWpCaU5UTmpNR0kzTFRSaE1HRXRNVEZsT1MxaU1tVmlMVEF3TWpGalkyUmhNalE0T0NJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcHJkV0psTFhONWMzUmxiVHByZFdKbFlXUnRNaUo5Lkk2MGhqTWJ4REhvZEpRT2JHWXZXdkVfUF9oVl9fbEg3OTR0Wi0wYnNmTXhQUEVUOVhFTGlYTzktZDg4NW1pcHRKdkl5UERnYmRSTWxVaE93TW42dXIxcGNqX0VhWU5yc2xOTmQybzJ0eFZMdHVOYVkydU9Yd1E4NHdMcU43Vnh6eTI1bmNhNlVNSERicDh2T3hXSDRLQlMtLTBBQjd0OUF0WHZGNl9YVzhxVVpOX2ZOYi1QTi1jQ2NDSWpxSUZTcDVYR1VkWWVCWm9aSTZNNE9jWUNCZk5HbDdGeEtmdkVGeDI0dUVweWE1WUt3WjRqeWoxSW16MEJuZGVEaFRMUlVBVWlxeU5VdjNJMFRZVDZpRHdOYXRZU0s2YXp0dHFSSTZfNWRVUFRmdlB1RmtnRkVRVnlVY3UyNEJqWGs2RkVTNnl2OXYySXN2UlY4N2tMMlE3aHJuQQ== | base64 --decode

****VER O USUARIO****
kubectl describe sa kubeadmin -n kube-system
kubectl describe sa kubeadm -n kube-system
||||||Name:                kubeadmin
||||||Namespace:           kube-system
||||||Labels:              <none>
||||||Annotations:         <none>
||||||Image pull secrets:  <none>
||||||Mountable secrets:   kubeadmin-token-bw6ts
||||||Tokens:              kubeadmin-token-bw6ts
///////////////
kubectl get serviceaccount -n kube-system
kubectl get serviceaccount -n kube-system
kubectl get serviceaccount -n kube-system
kubectl get serviceaccount -n kube-system
kubectl get clusterrolebinding -n kube-system

kubectl get clusterrole -n kube-system

////////////////
kubectl create clusterrolebinding kubeadmin-binding --clusterrole=cluster-admin --serviceaccount=kube-system:kubeadmin
kubectl create clusterrolebinding kubeadmin-binding2 --clusterrole=cluster-admin --serviceaccount=kube-system:kubeadm2


||||||clusterrolebinding.rbac.authorization.k8s.io/kubeadmin-binding created

kubectl get secret kubeadmin-token-5b6fw -n kube-system -o yaml |grep token:
kubectl get secret kubeadm-token-gxcmd -n kube-system -o yaml |grep token:
kubectl get secret kubeadm2-token-g4c8n -n kube-system -o yaml |grep token:
///
kubectl describe sa kubernetes-dashboard -n kube-system
kubectl get secret kubernetes-dashboard-token-t99h8 -n kube-system -o yaml |grep token:


||||||| token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSnJkV0psTFhONWMzUmxiU0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVmpjbVYwTG01aGJXVWlPaUpyZFdKbFlXUnRhVzR0ZEc5clpXNHRZbmMyZEhNaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaWEzVmlaV0ZrYldsdUlpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WlhKMmFXTmxMV0ZqWTI5MWJuUXVkV2xrSWpvaVkySTBZakJpTldFdE5EVmxOQzB4TVdVNUxUazBPV0l0TURBeU1XTmpaR0V5TkRnNElpd2ljM1ZpSWpvaWMzbHpkR1Z0T25ObGNuWnBZMlZoWTJOdmRXNTBPbXQxWW1VdGMzbHpkR1Z0T210MVltVmhaRzFwYmlKOS5PamNSVkVQMXF6UkVxWFA3My1Bd19wWkM1M2FscUw0Z0ltZUNLSU5Pc0ZmV1YwRlVzME5iRWQzNzBLUTdZTEV1MFg5TVJsOURUWEFJM1BqOXFmN0MwS0VCQ096Y3QzQVAxdnQ2dlRMSGVmU0FPRW9HaEJCS2NrVVA1Ny12cHJUQzBjV1BISHJ6VGhzQnp0ZDRZTHVaeW9mQlRSVk9Kc1ZpRm1YdEpTeS1yOHZFRXQ0eGRGOFJjYnVQSjhEQXpOeWVDRUNaeFlReERGWEw0b2V6YlRvdjNPalhrQUQ3TVk4eThFSkpRSGRhaUk0MGdzekZnOXc0VElJLVZNaGpRbU1jbFExOEg5V25KczZFRS1SUE1DdkdwQjVCMW5HeGpSd3FuYWZWOW13NU5YLTdxcF84d3dqWEkwNGVCeVZILVIydXhnMmxaR3F4RExEbWU1ZTZsM3dVSmc=
echo ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSnJkV0psTFhONWMzUmxiU0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVmpjbVYwTG01aGJXVWlPaUpyZFdKbFlXUnRhVzR0ZEc5clpXNHRZbmMyZEhNaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaWEzVmlaV0ZrYldsdUlpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WlhKMmFXTmxMV0ZqWTI5MWJuUXVkV2xrSWpvaVkySTBZakJpTldFdE5EVmxOQzB4TVdVNUxUazBPV0l0TURBeU1XTmpaR0V5TkRnNElpd2ljM1ZpSWpvaWMzbHpkR1Z0T25ObGNuWnBZMlZoWTJOdmRXNTBPbXQxWW1VdGMzbHpkR1Z0T210MVltVmhaRzFwYmlKOS5PamNSVkVQMXF6UkVxWFA3My1Bd19wWkM1M2FscUw0Z0ltZUNLSU5Pc0ZmV1YwRlVzME5iRWQzNzBLUTdZTEV1MFg5TVJsOURUWEFJM1BqOXFmN0MwS0VCQ096Y3QzQVAxdnQ2dlRMSGVmU0FPRW9HaEJCS2NrVVA1Ny12cHJUQzBjV1BISHJ6VGhzQnp0ZDRZTHVaeW9mQlRSVk9Kc1ZpRm1YdEpTeS1yOHZFRXQ0eGRGOFJjYnVQSjhEQXpOeWVDRUNaeFlReERGWEw0b2V6YlRvdjNPalhrQUQ3TVk4eThFSkpRSGRhaUk0MGdzekZnOXc0VElJLVZNaGpRbU1jbFExOEg5V25KczZFRS1SUE1DdkdwQjVCMW5HeGpSd3FuYWZWOW13NU5YLTdxcF84d3dqWEkwNGVCeVZILVIydXhnMmxaR3F4RExEbWU1ZTZsM3dVSmc= | base64 --decode
****o resultado na linha de baixo é o token final, cole no campo token no browser e autentique-se, ex:gerado****
eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJrdWJlYWRtaW4tdG9rZW4tYnc2dHMiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoia3ViZWFkbWluIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiY2I0YjBiNWEtNDVlNC0xMWU5LTk0OWItMDAyMWNjZGEyNDg4Iiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOmt1YmVhZG1pbiJ9.OjcRVEP1qzREqXP73-Aw_pZC53alqL4gImeCKINOsFfWV0FUs0NbEd370KQ7YLEu0X9MRl9DTXAI3Pj9qf7C0KEBCOzct3AP1vt6vTLHefSAOEoGhBBKckUP57-vprTC0cWPHHrzThsBztd4YLuZyofBTRVOJsViFmXtJSy-r8vEEt4xdF8RcbuPJ8DAzNyeCECZxYQxDFXL4oezbTov3OjXkAD7MY8y8EJJQHdaiI40gszFg9w4TII-VMhjQmMclQ18H9WnJs6EE-RPMCvGpB5B1nGxjRwqnafV9mw5NX-7qp_8wwjXI04eByVH-R2uxg2lZGqxDLDme5e6l3wUJg

echo ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSnJkV0psTFhONWMzUmxiU0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVmpjbVYwTG01aGJXVWlPaUpyZFdKbGNtNWxkR1Z6TFdSaGMyaGliMkZ5WkMxMGIydGxiaTEwT1Rsb09DSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMbTVoYldVaU9pSnJkV0psY201bGRHVnpMV1JoYzJoaWIyRnlaQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJbVEwTWpZM05UZGlMVFJoTURrdE1URmxPUzFpTW1WaUxUQXdNakZqWTJSaE1qUTRPQ0lzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwcmRXSmxMWE41YzNSbGJUcHJkV0psY201bGRHVnpMV1JoYzJoaWIyRnlaQ0o5LnBLZi1KN1FEQnFnMnpqakV1OFlpMHNqcnQ2WkItT3F5ZFlScE9vSWZaS0ZLVVNVVy11SnZYM0xTN2tlMUlPVE5hT3pUc2dEOUxlR1J1RUcyYUlHYUlvSkdBV3RmaEJMY1J5ZldtYmNneHhqVUVxcEt0UDVfTjNYbU53bTZOY0xHakItNnRtU2lyOHNLZXBjNUl6SEpyU2hnV1d3bUtxZ1p0V2xBSGRrMkNzNGRFV0h0SUtIYm5iZk84TEpuRFo3TkRZeThnZGowbmdYdUlZZ3l5RVRFTUs3MVJKNzJXVjZFVzIzaW55cGdzRVpwLXd5cGItMnJRWnV4Nk5hY210ZmRfNXAxdmdFQ1JxY2VuWlVjS1dBcXNJbkNOM3ZMT3hjakFNdlpwT0l3V0JHRlNNYXJmLUpBQnhyOXFkVHE0MmZ3NW5uLWZWaFlWczBmZUZuYndmT3l5Zw==| base64 --decode

echo ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSnJkV0psTFhONWMzUmxiU0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVmpjbVYwTG01aGJXVWlPaUpyZFdKbFlXUnRhVzR0ZEc5clpXNHROV0kyWm5jaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaWEzVmlaV0ZrYldsdUlpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WlhKMmFXTmxMV0ZqWTI5MWJuUXVkV2xrSWpvaU9XTXdaRFEyT1RFdE5EbGxOaTB4TVdVNUxXSmpaREl0TURBeU1XTmpaR0V5TkRnNElpd2ljM1ZpSWpvaWMzbHpkR1Z0T25ObGNuWnBZMlZoWTJOdmRXNTBPbXQxWW1VdGMzbHpkR1Z0T210MVltVmhaRzFwYmlKOS5qb2UyVlI3TkkydVpRRVZ3Rm4tTDY0NGxpV3ZVcTJXbjNIWndzQVBuUS1ibzRYOWVPV0pHWEp1N0d6RzJTbkowSVJIVFZqOEptclc0ZmxWN0xXd0N3bzNzVWZnRFp1SVhqSTlMVE5SalpLQXFZN0Y5SlM5NER6M1M3UzJHVER6TTdZYkFmb29aM1hLeVlHN1pTR2FqejBRS1ptZ19rbUM5Nmt0QmFpbF9tN044MERwTktDOVVuQWFRUjhZRWdjeEVNYldtVVJGODJHelBJaUVSMzVUVklxSDBrSTlISXhkVHRJZ0RuUjJNWnpFdENoZDVyVkFHWkgxYUhqSUhCSi05N2R5aDBJam9lNDd4dVVDTnEtVWtFRWlZZ29hZThDZWJnMHRvWVNxblE0Mk1PV0JyWTNJekNQUmtQdkh3NEpoWFgybndGRGFjblBsX1dvRDJKbEg4eEE=| base64 --decode


kubectl get ns
kubectl apply -f ns.yaml
////////
docs
***serviço-https://kubernetes.io/docs/concepts/services-networking/service/
--env
docker container run -d --env VARIAVEL_AMBIENTE=VALOR --env VARIAVEL_AMBIENTE2=VALOR2 image
//////
kubectl cluster-info




//////////////////////////////////////////////////////////////////////////////////////////////////////
cloud native - org 
aplicação graduada 
encubados
desativar swap ubuntu
swapoff -a 
swapon -a
======================================================================================================
(Event Sourcing, Saga, CQRS, BFF, etc...)
/////////////////////////////////////////////
apt  install htop

/////////////////////////////////////////////

cloud native

///////docker-compose////////////////////////////////
curl -L "https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
cd ../../../../../ && namo docker-compose.yaml
docker-compose up -d
/////escalando///////
docker-compose scale frontend=5
////
docker-compose ps
docker-compose logs
docker-compose logs |grep front


//////
docker login
/////
docker run -p -p 80:80 frontend-redesocial:1.0.0
////
docker build -t frontend-redesocial:1.0.0 .
///p o push
cd /cursoDevOps/frontend
docker build -t tjca1/frontend-redesocial:1.0.0 .
cd /cursoDevOps/backend-user
docker build -t tjca1/backend-user:1.0.0 .
cd /cursoDevOps/backend-scm
docker build -t tjca1/backend-scm:1.0.0 .
/////////////push/////////
docker push tjca1/frontend-redesocial:1.0.0
docker push tjca1/backend-user:1.0.0
docker push tjca1/backend-scm:1.0.0
ll



////
docker run -d -p 3020:3020 backend-user:1.0.0
docker run backend-user:1.0.0
////
docker build -t backend-scm:1.0.0 .
docker build -t tjca1/frontend-redesocial .
////
docker run -d -p 3030:3030 backend-scm:1.0.0
///deleta images///
docker rmi 
saber qual o usuario vc esta
whoami
/// SCM - source code manager
//////////////////////////////////////////////////////////////////////////////
https://downloads.mongodb.org/linux/mongodb-shell-linux-x86_64-ubuntu1804-4.0.6.tgz

mongodb+srv://tjca1:<password>@cluster0-9jbbe.mongodb.net/test?retryWrites=true
//////////////////////////////////////////////////////////////
Bootcamp: Microserviços, Docker, Kubernetes, Jenkins e Helm
////////////////////////////////////////////////////////////////
https://github.com/hedza06/spring-boot-docker/tree/master/src/main/resources/liquibase/migrations
////////////////
docker container ps -a | grep
docker images |grep maven
 
 docker run -d --name container_java_maven -p 8080:8080 -v /var/app 9997d8483b2f
///////////
apt-get update
docker run -it --rm --name maven-c -v "$(pwd)":/usr/src/mymaven -w /usr/src/mymaven maven:3.3-jdk-8 mvn clean install

///////Z:\root\java_maven_c//////////subindo imagen maven no docker e mapeando volume p jogar projetos maven/////////////////////////////////////////////////////////////////////
docker build . --tag tjca1/java_maven_c:1.0.0
docker container run -d --name java_maven_c -v "$(pwd)":/usr/src/mymaven -p 82:82 tjca1/java_maven_c:1.0.0
docker container exec -it java_maven_c /bin/bash
/////
root@d1f3bbb73d4e:/usr/src/mymaven/spring-boot-docker-master/target# java -jar docker-0.0.1-SNAPSHOT.jar
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
============_Cloud Computing_=======================================
GCP
https://cloud.google.com
thiagojosecorreiaaraujo@gmail.com

=================_react_plugins_extensions_==================================================
React Developer Tools
React Developer Tools
fire-fox CORS Everywhere
chrome - chrome web store
////
apt install xrdp xfce4 xfce4-goodies tightvncserver
echo xfce4-session> /home/ubuntu/.xsession
cp /home/ubuntu/.xsession etc/skel
sed -i '0,/-1/s//ask-1/' /etc/xrdp/xrdp.ini
service xrdp restart
sed -i '0,/ask-1/s//-1/' /etc/xrdp/xrdp.ini




===================================================================

=================
npm init -y
npm i --save -E body-parser@1.15.2 
npm i --save -E express@4.14.0 
npm i --save -E express-query-int@1.0.1 
npm i --save -E mongoose@4.7.0 
npm i --save -E node-restful@0.2.5 
npm i --save -E lodash@4.17.4 
npm i --save -E pm2@2.1.5 
npm i --save -E mongoose-paginate@5.0.3
cls
npm i --save-dev nodemon@1.11.0
=========bPoints===============================
/api/tesouraria      	get  - consulta todos os siclos
/api/tesouraria/1        get  - consulta os ciclos por id 
/api/tesouraria          post - cria um novo ciclo
/api/tesouraria/2        put  - altera o ciclo
/api/tesouraria/3        delete - remove o ciclo
/api/tesouraria/count    get - consulta a qtdd de ciclo
/api/tesouraria/summary   get - consulta o Sumario do ciclo
///////////////////////////////////////////////////
//////////////////////////////////////////////////

==========================================================================================================
echo "# BackNode ! bata !" >> README.md
git add .
git commit -m "1o Commit"
git push
git status
///////////nova branch/////////////////////
git pull
git checkout -b branch_padrao
git push origin branch_padrao
git branch -a
git checkout master
git status



==================_docker_================================================================================
docker container ps -a
***remover
docker rm id_ou_apelido
****infos
docker inspect id_ou_apelido
****commit
docker commit ID/apelido nome_da_nova_imagem

======================_SSH_================================================================================

======================_SSH_================================================================================
apt install ssh
////
ir no C:\Users\tjca1\.ssh
e colar os arquivos
authorized_key
known_hosts
que estão o E:\bkUbuntu\root\.ssh
ir no \etc\ssh no linux e colar os 
authorized_key
known_hosts
sshd_config
ddepois 
systemctl restart ssh

===============_backEnd_=================================================================================
npm i --save -E body-parser@1.15.2 
npm i --save -E express@4.14.0 
npm i --save -E express-query-int@1.0.1 
npm i --save -E mongoose@4.7.0 
npm i --save -E node-restful@0.2.5 
npm i --save -E lodash@4.17.4 
npm i --save -E pm2@2.1.5 
npm i --save -E mongoose-paginate@5.0.3
npm i --save -E  


npm i --save --save-dev -E nodemon@1.11.0
//////mongo no docker//////////
docker container start -ai e04f1090008b
///
docker pull mongo:4.1.8
docker container run --name mongo_para_node -d -p 27017:27017 -p 28017:28017 -e MONGO_INITDB_ROOT_USERNAME=mongo  -e MONGO_INITDB_ROOT_PASSWORD=mongo mongo:4.1.8
docker container start -ai mongo_para_node
docker container stop mongo_para_node
docker exec -it mongo_para_node bash
//////subir para prod////////
npm run production
///ver status////
call node_modules\.bin\pm2 status
///monitorar a app////
call node_modules\.bin\pm2 monit
===============_frontEnd_=================================================================================
echo ///sobi o servidor para testes da aplicação////////////////////////////////////////////////////////////////
npm i --save-dev webpack@1.14.0 
npm i --save-dev webpack-dev-server@1.16.2
echo ///faz o transpale do jsx para javascript nativo para que o browser consiga ler os fontes babel////////////
npm i --save-dev babel-core@6.22.1 
npm i --save-dev babel-loader@6.2.10 
npm i --save-dev babel-plugin-react-html-attrs@2.0.0 
npm i --save-dev babel-plugin-transform-object-rest-spread@6.22.0
npm i --save-dev babel-preset-es2015@6.22.0 
npm i --save-dev babel-preset-react@6.22.0
echo////carregar css na app//////////////////////////////////////////////////////////////////////////////////////
npm i --save-dev extract-text-webpack-plugin@1.0.1
npm i --save-dev style-loader@0.13.1 
npm i --save-dev css-loader@0.26.1
echo////carregar imgs e fonts na app//////////////////////////////////////////////////////////////////////////////
npm i --save-dev file-loader@0.9.0
echo////aparencia app themas//////////////////////////////////////////////////////////////////////////////////////
npm i --save-dev bootstrap@3.3.7
npm i --save-dev font-awesome@4.7.0
echo////React//////////////////////////////////////////////////////////////////////////////////////////////////////
npm i --save-dev react@15.4.2
npm i --save-dev react-dom@15.4.2
npm i --save-dev react-router@3.0.2
echo////Chamadas http-ajax-promeses/////////////////////////////////////////////////////////////////////////////////
npm i --save-dev axios@0.15.3
echo////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////
docker container run --name bd_mysql -e MYSQL_ROOT_PASSAWORD=mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=mysql -e MYSQL_RANDOM_ROOT_PASSWORD=mysql  -e MYSQL_DATABASE=base_de_dados -p 3306:3306 mysql:5.5
///depois que vc statartar o container va no log e pegue a senha !!!!!!/////////////////
GENERATED ROOT PASSWORD: Xalah8thethud4jeeTaiko9ahzohghoo


////////////////////////////////
docker attach
 babel-core@6.22.1 
 babel-loader@6.2.10 
 babel-plugin-react-html-attrs@2.0.0 
 babel-plugin-transform-object-rest-spread@6.22.0
 babel-preset-es2015@6.22.0 
 babel-preset-react@6.22.0
===============_react_=================================================================================
npm i --save-dev webpack@1.14.0 webpack-dev-server@1.16.2
npm i --save-dev babel-core@6.22.1 babel-loader@6.2.10 babel-preset-es2015@6.22.0
npm i --save-dev babel-plugin-transform-object-rest-spread@6.22.0
npm i --save-dev react@15.4.2
npm i --save-dev extract-text-webpack-plugin@1.0.1 style-loader@0.13.1 css-loader@0.26.1
npm i --save-dev babel-preset-react@6.22.0
./node_modules/.bin/webpack
//////////////////////////////////////
echo "# rascunho-react" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/tjca1/rascunho-react.git
git push -u origin master
////
npm i --save-dev react@15.4.2 react-dom@15.4.2 babel-core@6.22.1 babel-loader@6.2.10 babel-preset-es2015@6.22.0 webpack@1.14.0 webpack-dev-server@1.16.2
===============_fechar_porta_====_porta_===============================================================
netstat -a -n -o | findstr :7777
taskKill.exe /F /PID 6676

=======================_angular2_======================================================================
Dart = typeScript
////////instalação/////////
nodeJs
  node -v
npm install -g @angular/cli
	ng --version
//////instalação typescript////
npm install typescript -g
tsc --version
///compilar 1 arquivo///
tsc app.ts
// compilar monitorando //
tsc -w
///////executar arquivo js ////////
node arquivo.js 
node arquivo
///////


===========================_jpa_=================================================================================================================
A tag exclude-unlisted-classes configurada dentro no arquivo persistem.xml varre minhes entidades e cria as tabelas no banco com o valor false

A propreiedade com o name 'hibernate.hbm2ddl.auto' com a valor updade atualiza o banco / create recria tudo / none faz nada


fetch = FetchType.LAZY
fetch = FetchType.EAGER
cascade = CascadeType.ALL

@OneToMany ou @ManyToMany vai buscar as informações so quando os metodos gets da entidade forem acionados
fetch = FetchType.LAZY
aaaaaaaaa\

CascadeType.ALL = Realiza todas as operações em cascata
CascadeType.DETACH = Realiza a operação detach em cascata
CascadeType.MERGE = Realiza a operação merge em cascata
CascadeType.PERSIST = Realiza a operação persist em cascata
CascadeType.REFRESH = Realiza a operação refresh em cascata
CascadeType.REMOVE = Realiza a operação remove em cascata
https://www.youtube.com/watch?v=7C6HrrOYfpU
